dpcheck this

context string
    function length(s)
        if not (type(s) == String) then
            return null
        end
        var i = 0
        var char
        while (char = s[i]) != null do
            i++
        end
        return i
    end

    function sub(s,index)
        var todo = string.length(s) - index
        if todo < 0 then return null end
        var s_ = ""
        for var i = 0, i < todo, i++ do
            s_ += s[i + index]
        end
        return s_
    end

    function sub2(s,start,end_)
        if not ((type(s) == String) and (type(start) == Number) and (type(end_) == Number)) then return null end
        var todo = String.length(s) - end_
        if todo < 0 then return null end
        var s_ = ""
        for var i = start, i < todo, i++ do
            s_ += s[i + index]
        end
        return s_
    end

    function format(base, format)
        if type(format) != Array then return null end
        if type(base) != String then return null end

        var length = String.length(base)
        var sub

        for var i = 0, i < length, i++ do
            if base[i] == "{" then

            else

            end
        end
    end
end